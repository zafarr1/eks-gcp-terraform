name: tf-multistage

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}  # allow manual re-runs of the whole pipeline

permissions:
  contents: read

env:
  PLAN_BUCKET: plan-bucket-zaf-gcp
  DESTROY_SUBPATH: destroy

jobs:
  # -------------------------------------------------
  # 1) PLAN (auto)
  # -------------------------------------------------
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Terraform 1.13.1
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -LO "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -out=plan.tfplan

      - name: Checksum plan
        run: sha256sum plan.tfplan | awk '{print $1}' > plan.tfplan.sha256

      - name: Upload plan to GCS
        run: |
          SAFE_PREFIX="${{ github.repository }}-${{ github.sha }}"
          gsutil cp plan.tfplan gs://${PLAN_BUCKET}/${SAFE_PREFIX}/plan.tfplan
          gsutil cp plan.tfplan.sha256 gs://${PLAN_BUCKET}/${SAFE_PREFIX}/plan.tfplan.sha256

  # -------------------------------------------------
  # 2) APPLY (waits for your approval in this same run)
  # -------------------------------------------------
  apply:
    needs: [plan]
    runs-on: ubuntu-latest
    environment: apply   # <-- creates the approval gate
    outputs:
      safe_prefix: ${{ steps.set_prefix.outputs.safe_prefix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Terraform 1.13.1
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -LO "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Set Prefix
        id: set_prefix
        run: echo "safe_prefix=${{ github.repository }}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Download plan from GCS
        run: |
          SAFE_PREFIX="${{ github.repository }}-${{ github.sha }}"
          gsutil cp gs://${PLAN_BUCKET}/${SAFE_PREFIX}/plan.tfplan ./plan.tfplan
          gsutil cp gs://${PLAN_BUCKET}/${SAFE_PREFIX}/plan.tfplan.sha256 ./plan.tfplan.sha256

      - name: Verify checksum
        run: |
          DOWN_HASH="$(sha256sum plan.tfplan | awk '{print $1}')"
          EXP_HASH="$(cat plan.tfplan.sha256)"
          if [ "$DOWN_HASH" != "$EXP_HASH" ]; then
            echo "Checksum mismatch! expected=$EXP_HASH got=$DOWN_HASH"
            exit 1
          fi

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: terraform apply -input=false plan.tfplan

  # -------------------------------------------------
  # 3) DESTROY PLAN (auto after apply)
  # -------------------------------------------------
  destroy-plan:
    needs: [apply]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Terraform 1.13.1
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -LO "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Terraform Init
        run: terraform init -input=false

      - name: Create Destroy Plan
        run: terraform plan -destroy -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -out=destroy.tfplan

      - name: Checksum Destroy Plan
        run: sha256sum destroy.tfplan | awk '{print $1}' > destroy.tfplan.sha256

      - name: Upload Destroy Plan
        run: |
          SAFE_PREFIX="${{ github.repository }}-${{ github.sha }}"
          gsutil cp destroy.tfplan gs://${PLAN_BUCKET}/${SAFE_PREFIX}/${DESTROY_SUBPATH}/destroy.tfplan
          gsutil cp destroy.tfplan.sha256 gs://${PLAN_BUCKET}/${SAFE_PREFIX}/${DESTROY_SUBPATH}/destroy.tfplan.sha256

  # -------------------------------------------------
  # 4) DESTROY APPLY (waits for your approval in SAME RUN)
  # -------------------------------------------------
  destroy-apply:
    needs: [destroy-plan]
    runs-on: ubuntu-latest
    environment: destroy-apply   # <-- second approval gate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Terraform 1.13.1
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -LO "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Download Destroy Plan
        run: |
          SAFE_PREFIX="${{ github.repository }}-${{ github.sha }}"
          gsutil cp gs://${PLAN_BUCKET}/${SAFE_PREFIX}/${DESTROY_SUBPATH}/destroy.tfplan ./destroy.tfplan
          gsutil cp gs://${PLAN_BUCKET}/${SAFE_PREFIX}/${DESTROY_SUBPATH}/destroy.tfplan.sha256 ./destroy.tfplan.sha256

      - name: Verify destroy plan checksum
        run: |
          DOWN_HASH="$(sha256sum destroy.tfplan | awk '{print $1}')"
          EXP_HASH="$(cat destroy.tfplan.sha256)"
          if [ "$DOWN_HASH" != "$EXP_HASH" ]; then
            echo "Checksum mismatch! expected=$EXP_HASH got=$DOWN_HASH"; exit 1
          fi

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Destroy Apply (from plan)
        run: terraform apply -input=false destroy.tfplan
